include "docker.conf"
include "mesos.conf"
include "marathon.conf"
include "kafka.conf"
include "loadbalancer.conf"

# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret="_sHtTAdopWV_VQ1yX5lwl]A_EV0q@S8sPEjHUdgrDUQU;AOI:qWAd6RLS8ePZX6A"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:mem:play"
db.default.user=sa
db.default.password=""

slick.default="models.*"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

applyEvolutions.default=true

# Webservice timeouts
ws.timeout.connection=5000
ws.timeout.idle=5000

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=INFO

# Akka
# ~~~~~
akka {

  loglevel=INFO

  log-config-on-start = off

  default-dispatcher.fork-join-executor.pool-size-max = 64

  actor.debug.receive = on

  debug {

    receive = on

    autoreceive = on

    lifecycle = on

    fsm = on

    event-stream = on

  }
}

